# 내 풀이

def solution(cards1, cards2, goal):
    c1, c2, g = 0, 0, 0
        
    while g != len(goal):
        
        if c1 < len(cards1) and goal[g] == cards1[c1]:    # card1 카드 = goal 카드 -> c1 + 1
            c1 += 1
        elif c2 < len(cards2) and goal[g] == cards2[c2]:  # card2 카드 = goal 카드 -> c2 + 1
            c2 += 1
        else:
            return 'No'       # card1순서 카드, card2 순서 카드 둘 다 아니면 no 리턴
        
        g += 1                # goal 카드 + 1
    
    return 'Yes'              # goal카드가 다 돌았으면 yes

'''
카드 순서가 중요한 문제
다른 답들도 대체로 비슷, pop이나 인덱스를 활용해서 처리함
생각해보니까 for문 쓰면 되는데 굳이 while을 썼넹..ㅎㅎ

테스트 1 〉	통과 (0.01ms, 10.4MB)
테스트 2 〉	통과 (0.00ms, 10.2MB)
테스트 3 〉	통과 (0.00ms, 10.2MB)
테스트 4 〉	통과 (0.00ms, 10.3MB)
테스트 5 〉	통과 (0.01ms, 10.2MB)
테스트 6 〉	통과 (0.01ms, 10.3MB)
테스트 7 〉	통과 (0.00ms, 10.2MB)
테스트 8 〉	통과 (0.00ms, 10.3MB)
테스트 9 〉	통과 (0.00ms, 10.2MB)
테스트 10 〉	통과 (0.00ms, 10.2MB)
테스트 11 〉	통과 (0.01ms, 10.4MB)
테스트 12 〉	통과 (0.01ms, 10.2MB)
테스트 13 〉	통과 (0.01ms, 10.2MB)
테스트 14 〉	통과 (0.01ms, 10.3MB)
테스트 15 〉	통과 (0.01ms, 10.2MB)
테스트 16 〉	통과 (0.01ms, 10.3MB)
테스트 17 〉	통과 (0.01ms, 10.4MB)
테스트 18 〉	통과 (0.01ms, 10.3MB)
테스트 19 〉	통과 (0.01ms, 10.3MB)
테스트 20 〉	통과 (0.01ms, 10.2MB)
테스트 21 〉	통과 (0.01ms, 10.2MB)
테스트 22 〉	통과 (0.01ms, 10.2MB)
테스트 23 〉	통과 (0.00ms, 10.3MB)
테스트 24 〉	통과 (0.01ms, 10.3MB)
테스트 25 〉	통과 (0.00ms, 10.2MB)
'''